{"version":3,"sources":["../src/object-keys-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,YAApB;AACA,OAAO,WAAP,MAAwB,cAAxB;AACA,OAAO,UAAP,MAAuB,oBAAvB;AACA,OAAO,YAAP,MAAyB,sBAAzB;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,GAAP,MAAgB,oBAAhB;AACA,OAAO,OAAP,MAAoB,aAApB;AAEA,IAAM,SAAS,GAAG,GAAG,WAArB;AACA,IAAM,UAAU,GAAG,OAAO,SAAS,CAAC,IAAjB,KAA0B,UAA1B,IAAwC,SAAS,CAAC,IAArE;AAEA,IAAI,SAAJ;AACA,IAAI,cAAJ;AACA,IAAI,aAAJ;AACA,IAAI,cAAJ;AACA,IAAI,aAAJ;AACA,IAAI,YAAJ;;AAEA,IAAI,UAAJ,EAAgB;AACd,MAAM,YAAY,GAAG,SAAS,YAAT,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC;AACpD,WAAO,CAAC,CAAC,KAAF,KAAY,KAAZ,IAAqB,OAAO,CAAC,CAAC,CAAC,KAAH,CAA5B,IAAyC,CAAC,CAAC,KAAF,CAAQ,MAAR,KAAmB,MAAnE;AACD,GAFD;;AAIA,MAAM,MAAM,GAAG,SAAS,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB;AACtC,QAAM,CAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAV;AACA,QAAM,CAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAV;AAEA,WAAQ,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAAlB,IAAyB,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAAjD;AACD,GALD;;AAOA,MAAI,OAAO,GAAG;AAAC,IAAA,CAAC,EAAE,CAAJ;AAAO,IAAA,CAAC,EAAE;AAAV,GAAd;AACA,MAAI,GAAG,GAAG,OAAO,CAAC,UAAD,EAAa,OAAb,CAAjB;AACA,EAAA,SAAS,GAAG,YAAY,CAAC,GAAD,EAAM,CAAN,CAAZ,IAAwB,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA1C;;AAEA,MAAI,SAAJ,EAAe;AACb,IAAA,OAAO,GAAG,MAAM,CAAC,GAAD,CAAhB;AACA,IAAA,OAAO,CAAC,CAAR,GAAY,CAAZ;AACA,IAAA,GAAG,GAAG,OAAO,CAAC,UAAD,EAAa,OAAb,CAAb;AACA,IAAA,SAAS,GAAG,YAAY,CAAC,GAAD,EAAM,CAAN,CAAZ,IAAwB,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA1C;AACD;;AAED,MAAI,SAAJ,EAAe;AACb,IAAA,cAAc,GAAG,OAAO,CAAC,UAAD,EAAa,IAAb,CAAP,CAA0B,KAA3C;AACA,IAAA,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,UAAD,EAAa,EAAb,CAAR,EAA0B,CAA1B,CAA5B;AACA,IAAA,cAAc,GAAG,OAAO,CAAC,UAAD,EAAa,IAAb,CAAP,CAA0B,KAA1B,KAAoC,KAArD;AAEA,IAAA,GAAG,GAAG,OAAO,CACX,UADW,EAEV,SAAS,OAAT,GAAmB;AAClB;AACA,aAAO,SAAP;AACD,KAHD,CAGG,CAHH,EAGM,CAHN,CAFW,CAAb;AAQA,IAAA,aAAa,GAAG,YAAY,CAAC,GAAD,EAAM,CAAN,CAAZ,IAAwB,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA9C;AAEA,IAAA,GAAG,GAAG,OAAO,CAAC,UAAD,EAAa,MAAM,CAAC,IAAD,CAAnB,CAAb;AACA,IAAA,YAAY,GAAG,YAAY,CAAC,GAAD,EAAM,CAAN,CAAZ,IAAwB,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA7C;AACD;AACF;;AAED,OAAO,IAAM,OAAO,GAAG,SAAS,IAAT,CAAc,MAAd,EAAsB;AAC3C,MAAI,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC,MAAD,CAAX,GAAsB,MAAxC;;AAEA,MAAI,aAAa,KAAK,IAAlB,IAA0B,WAAW,CAAC,GAAD,CAAzC,EAAgD;AAC9C,IAAA,GAAG,GAAG,UAAU,CAAC,GAAD,CAAhB;AACD,GAFD,MAEO,IAAI,YAAY,KAAK,IAAjB,IAAyB,QAAQ,CAAC,GAAD,CAArC,EAA4C;AACjD,IAAA,GAAG,GAAG,YAAY,CAAC,GAAD,CAAlB;AACD,GAFM,MAEA,IAAI,cAAc,KAAK,IAAnB,IAA2B,QAAQ,CAAC,GAAD,CAAvC,EAA8C;AACnD,QAAM,SAAS,GAAG,EAAlB;AACA;;AACA,SAAK,IAAM,GAAX,IAAkB,GAAlB,EAAuB;AACrB;AACA,UAAI,GAAG,CAAC,GAAD,EAAM,GAAN,CAAP,EAAmB;AACjB,QAAA,SAAS,CAAC,SAAS,CAAC,MAAX,CAAT,GAA8B,GAA9B;AACD;AACF;;AAED,WAAO,SAAP;AACD;;AAED,SAAO,UAAU,CAAC,GAAD,CAAjB;AACD,CArBM;AAuBP,OAAO,IAAM,cAAc,GAAG,SAAS,IAAT,CAAc,MAAd,EAAsB;AAClD,SAAO,OAAO,CAAC,QAAQ,CAAC,MAAD,CAAT,CAAd;AACD,CAFM;AAIP,IAAI,UAAJ;;AAEA,IAAI,SAAJ,EAAe;AACb,MAAI,cAAc,IAAI,aAAlB,IAAmC,cAAnC,IAAqD,aAArD,IAAsE,YAA1E,EAAwF;AACtF,IAAA,UAAU,GAAG,UAAb;AACD,GAFD,MAEO;AACL,IAAA,UAAU,GAAG,OAAb;AACD;AACF;AAED;;;;;;;;;;AAQA,IAAM,WAAW,GAAG,SAAS,GAAG,UAAH,GAAgB,cAA7C;AAEA,eAAe,WAAf","file":"object-keys-x.esm.js","sourcesContent":["import toObject from 'to-object-x';\nimport attempt from 'attempt-x';\nimport isArray from 'is-array-x';\nimport isArguments from 'is-arguments';\nimport arraySlice from 'array-like-slice-x';\nimport splitIfBoxed from 'split-if-boxed-bug-x';\nimport isString from 'is-string';\nimport isRegexp from 'is-regexp-x';\nimport has from 'has-own-property-x';\nimport objKeys from 'object-keys';\n\nconst ObjectCtr = {}.constructor;\nconst nativeKeys = typeof ObjectCtr.keys === 'function' && ObjectCtr.keys;\n\nlet isWorking;\nlet throwsWithNull;\nlet worksWithPrim;\nlet worksWithRegex;\nlet worksWithArgs;\nlet worksWithStr;\n\nif (nativeKeys) {\n  const isCorrectRes = function isCorrectRes(r, length) {\n    return r.threw === false && isArray(r.value) && r.value.length === length;\n  };\n\n  const either = function either(r, a, b) {\n    const x = r.value[0];\n    const y = r.value[1];\n\n    return (x === a && y === b) || (x === b && y === a);\n  };\n\n  let testObj = {a: 1, b: 2};\n  let res = attempt(nativeKeys, testObj);\n  isWorking = isCorrectRes(res, 2) && either(res, 'a', 'b');\n\n  if (isWorking) {\n    testObj = Object('a');\n    testObj.y = 1;\n    res = attempt(nativeKeys, testObj);\n    isWorking = isCorrectRes(res, 2) && either(res, '0', 'y');\n  }\n\n  if (isWorking) {\n    throwsWithNull = attempt(nativeKeys, null).threw;\n    worksWithPrim = isCorrectRes(attempt(nativeKeys, 42), 0);\n    worksWithRegex = attempt(nativeKeys, /a/g).threw === false;\n\n    res = attempt(\n      nativeKeys,\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })(1, 2),\n    );\n\n    worksWithArgs = isCorrectRes(res, 2) && either(res, '0', '1');\n\n    res = attempt(nativeKeys, Object('ab'));\n    worksWithStr = isCorrectRes(res, 2) && either(res, '0', '1');\n  }\n}\n\nexport const patched = function keys(object) {\n  let obj = toObject ? toObject(object) : object;\n\n  if (worksWithArgs !== true && isArguments(obj)) {\n    obj = arraySlice(obj);\n  } else if (worksWithStr !== true && isString(obj)) {\n    obj = splitIfBoxed(obj);\n  } else if (worksWithRegex !== true && isRegexp(obj)) {\n    const regexKeys = [];\n    /* eslint-disable-next-line no-restricted-syntax */\n    for (const key in obj) {\n      // noinspection JSUnfilteredForInLoop\n      if (has(obj, key)) {\n        regexKeys[regexKeys.length] = key;\n      }\n    }\n\n    return regexKeys;\n  }\n\n  return nativeKeys(obj);\n};\n\nexport const implementation = function keys(object) {\n  return objKeys(toObject(object));\n};\n\nlet objectKeys;\n\nif (isWorking) {\n  if (throwsWithNull && worksWithPrim && worksWithRegex && worksWithArgs && worksWithStr) {\n    objectKeys = nativeKeys;\n  } else {\n    objectKeys = patched;\n  }\n}\n\n/**\n * This method returns an array of a given object's own enumerable properties,\n * in the same order as that provided by a for...in loop (the difference being\n * that a for-in loop enumerates properties in the prototype chain as well).\n *\n * @param {*} obj - The object of which the enumerable own properties are to be returned.\n * @returns {Array} An array of strings that represent all the enumerable properties of the given object.\n */\nconst $objectKeys = isWorking ? objectKeys : implementation;\n\nexport default $objectKeys;\n"]}